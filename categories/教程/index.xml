<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>教程 on {CodeTrace} - Discover Issues, Share Solutions.</title><link>https://loveyyp1314.github.io/categories/%E6%95%99%E7%A8%8B/</link><description>Recent content in 教程 on {CodeTrace} - Discover Issues, Share Solutions.</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 30 Jul 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://loveyyp1314.github.io/categories/%E6%95%99%E7%A8%8B/index.xml" rel="self" type="application/rss+xml"/><item><title>Tessy介绍</title><link>https://loveyyp1314.github.io/posts/lihe/</link><pubDate>Wed, 30 Jul 2025 00:00:00 +0000</pubDate><guid>https://loveyyp1314.github.io/posts/lihe/</guid><description>&lt;p>&lt;strong>产品概述&lt;/strong>&lt;/p>
&lt;p>Tessy源自戴姆勒—奔驰公司的软件技术实验室，由德国Hitex公司负责销售及技术的支持服务，是一款专门针对嵌入式软件进行单元/集成测试的工具。它可以对C/C++代码进行单元、集成测试，可以自动化搭建测试环境、执行测试、评估测试结果并生成测试报告，其多样化的测试用例导入生成方式和与测试需求关联的特色，使Tessy在测试组织和测试管理上也发挥了良好的作用。目前Tessy被广泛应用在汽车电子客户中。
&lt;strong>产品介绍&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>主要特点&lt;/p>
&lt;pre>&lt;code>在V模型开发中，Tessy主要应用在单元测试和集成测试阶段。单元测试通过运行代码检测出函数中错误，比如算法错误、接口问题等；集成测试则在单元测试的基础上验证单元之间接口的正确性。基于越早发现bug开发成本越低的原则，在进行代码功能验证的过程中，按照V流程右半部分先完成单元测试再进行集成测试的测试顺序更为有效。

另外，Tessy也可以满足各类标准（如ISO26262、IEC61508、EN50128/50129等）对测试的需求。比如Tessy可以满足ISO26262中各等级对单元/集成测试的要求，当然Tessy本身也通过了TUV的认证，证明该软件是安全可靠的，可以在安全相关的软件研发过程中使用。
&lt;/code>&lt;/pre>
&lt;ul>
&lt;li>
&lt;p>主要功能&lt;/p>
&lt;p> 自动生成测试环境、一键执行及评估结果&lt;/p>
&lt;pre>&lt;code>Tessy可以自动生成驱动程序、桩函数，帮助测试人员提高单元测试效率。
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://img2024.cnblogs.com/blog/1736515/202401/1736515-20240115145130637-2130265592.jpg" alt="">&lt;/p>
&lt;pre>&lt;code> Tessy支持一键执行测试，并自动对测试结果进行评估，可生成多种形式的报告。
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="https://img2024.cnblogs.com/blog/1736515/202401/1736515-20240115145146213-1379108612.jpg" alt="">&lt;/p>
&lt;p> 便捷的测试用例设计方式&lt;/p>
&lt;pre>&lt;code> 除软件界面手动设计测试用例外，Tessy还支持导入导出多种格式的测试用例。另外，Tessy集成了分类树编辑器CTE，有效利用等价类划分以及边界值法，辅助设计出更有效的测试用例。
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="https://img2024.cnblogs.com/blog/1736515/202401/1736515-20240115145154695-1885141268.jpg" alt="">&lt;/p>
&lt;p> 高度自动化的回归测试&lt;/p>
&lt;pre>&lt;code> Tessy通过分析源文件自动识别函数及相关接口。在接口发生变更时，支持通过简便的操作进行测试数据复用，保证便捷有效的回归测试。
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="https://img2024.cnblogs.com/blog/1736515/202401/1736515-20240115145202118-1151957233.jpg" alt="">&lt;/p>
&lt;p> 测试覆盖度分析&lt;/p>
&lt;pre>&lt;code> Tessy提供分支覆盖、修正条件/判定覆盖MC/DC（Modified Codition/Decision Coverage）、多条件覆盖MCC(Multiple Condition Coverage)等多种覆盖度分析。
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="https://img2024.cnblogs.com/blog/1736515/202401/1736515-20240115145209037-578334972.jpg" alt="">&lt;/p>
&lt;p> 故障注入测试&lt;/p>
&lt;pre>&lt;code> 可以实现传统方法无法实现的测试用例输入，例如跳出无限循环，先写后读功能以及防御性编程测试。
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="https://img2024.cnblogs.com/blog/1736515/202401/1736515-20240115145218147-190432401.jpg" alt="">&lt;/p>
&lt;p> 测试的需求可追溯&lt;/p>
&lt;pre>&lt;code> 支持导入多种格式需求、管理需求并实现测试用例与需求的关联。
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="https://img2024.cnblogs.com/blog/1736515/202401/1736515-20240115145226235-1159181272.jpg" alt="">&lt;/p>
&lt;p> 支持多种开发环境下PIL测试&lt;/p>
&lt;pre>&lt;code> 支持与常见嵌入式环境进行集成实现在板测试，且环境接口对用户开放。
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="https://img2024.cnblogs.com/blog/1736515/202401/1736515-20240115145234702-1279352885.jpg" alt="">&lt;/p>
&lt;p>&lt;strong>应用案例&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>汽车行业&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://img2024.cnblogs.com/blog/1736515/202401/1736515-20240115145244309-1541672994.jpg" alt="">&lt;/p>
&lt;ul>
&lt;li>安全关键模块&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://img2024.cnblogs.com/blog/1736515/202401/1736515-20240115145252423-1406918416.jpg" alt="">&lt;/p>
&lt;/li>
&lt;/ul></description></item></channel></rss>